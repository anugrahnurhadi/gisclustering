{"version":3,"sources":["asset/earth.png","pages/header.jsx","pages/peta/peta.jsx","pages/home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","state","style","className","src","earth","Component","L","Icon","Default","prototype","_getIconUrl","Peta","datamarkers","this","map","setView","tileLayer","attribution","addTo","markerClusterGroups","markerClusterGroup","animate","animateAddingMarkers","i","marker","outlet","LATITUDE","LONGITUDE","JSON","parse","stringify","on","e","html","options","NAME","ADDRESS","bindPopup","openPopup","addLayer","push","length","peta","id","classNeme","Home","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAAe,G,WAAA,IAA0B,mC,OCkB1BA,E,4MAbXC,MAAQ,G,4CACR,WACI,OACI,qBAAKC,MAAO,CAAC,mBAAmB,uCAAwC,MAAQ,OAAQ,OAAS,SAAjG,SAGQ,qBAAIA,MAAO,CAAC,eAAe,OAAO,cAAc,OAAO,MAAQ,SAAUC,UAAU,gBAAnF,cAAoG,qBAAKC,IAAKC,EAAOF,UAAU,gBAAgBD,MAAO,CAAC,MAAQ,OAAO,OAAS,UAA/K,iC,GAPCI,a,wDCQdC,IAAEC,KAAKC,QAAQC,UAAUC,Y,IAuEjBC,E,4MA5DXC,YAAY,G,EA6BZZ,MAAQ,G,uDAnCR,WACIa,KAAKC,Q,iBAMT,WAAM,IAAD,OAEGA,EAAMR,IAAEQ,IAAI,OAAOC,QAAQ,EAAE,UAAU,aAAc,IAEzDT,IAAEU,UAAU,0CAA2C,CACnDC,YAAa,6EACdC,MAAMJ,GAETD,KAAKM,oBAAsBb,IAAEc,mBAAmB,CAACC,SAAS,EACtDC,sBAAsB,IAAOJ,MAAMJ,GACvC,IAVC,eAUOS,GAEJ,IAAIC,EAASlB,IAAEkB,OAAO,CAACC,EAAOF,GAAGG,SAAUD,EAAOF,GAAGI,WAAYC,KAAKC,MAAMD,KAAKE,UAAUL,EAAOF,MAClGC,EAAOO,GAAG,SAAS,SAASC,GACxB,IAAIC,EAAK,iHAGPT,EAAOU,QAAQC,KACjB,cAAeX,EAAOU,QAAQE,QAAQ,oBACtCZ,EAAOa,UAAUJ,GAAMK,eAEzB,EAAKnB,oBAAoBoB,SAASf,GAEpC,EAAKZ,YAAY4B,KAAKhB,IAblBD,EAAE,EAAEA,EAAEE,EAAOgB,OAAOlB,IAAK,EAAzBA,GATCV,KAyBJ6B,KAAK5B,I,oBAGd,WAEI,OACA,8BAGY,sBAAKb,MAAO,CAAC,MAAQ,OAAO,OAAS,QAAQ,SAAW,YAAxD,UAEY,qBAAKC,UAAU,gBAAgBD,MAAO,CAAC,UAAU,IAAI,MAAQ,OAAO,OAAS,OAAO,OAAS,MAAM,SAAY,YAAa0C,GAAG,QAG/H,qBAAKzC,UAAU,qBAAqBD,MAAO,CAAC,UAAU,IAAI,MAAQ,QAAQ,SAAY,WAAW,OAAS,OAAO,MAAQ,EAAE,IAAM,EAAE,OAAS,GAA5I,SACI,qBAAKC,UAAU,OAAOD,MAAO,CAAC,MAAQ,QAAQ,OAAS,OAAO,mBAAmB,QAAQ,QAAU,MAAM,QAAU,OAAnH,SACI,qBAAK2C,UAAU,YAAf,SACI,oBAAG3C,MAAO,CAAC,MAAQ,QAAQ,YAAY,OAAO,aAAa,UAA3D,cAAuE,2CAAvE,sB,GAnDzBI,aCKJwC,E,4MAZX7C,MAAQ,G,4CACR,WACI,OACI,sBAAKC,MAAO,CAAC,mBAAmB,OAAO,OAAS,QAAhD,UACI,cAAC,EAAD,IACA,cAAC,EAAD,W,GANGI,a,MCOJyC,MAVf,WACE,OACE,8BACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f22513f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/earth.5f272509.png\";","import React, { Component } from 'react';\nimport './header.css'\nimport earth from './../asset/earth.png'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nclass Header extends Component {\n    state = {  }\n    render() { \n        return ( \n            <div style={{\"background-image\":\"linear-gradient(30deg, blue, purple)\", \"width\":\"100%\", \"height\":\"110px\"}}>\n                \n                \n                    <h1 style={{\"padding-left\":\"20px\",\"padding-top\":\"20px\",\"color\":\"white\"}} className=\"Konten-muncul\"> <img src={earth} className=\"Tulisan-keren\" style={{\"width\":\"70px\",\"height\":\"70px\"}} /> Mapping Application </h1>\n                \n            </div>\n         );\n    }\n}\n \nexport default Header;","import React, { Component } from 'react';\nimport L from 'leaflet'\nimport 'leaflet.markercluster'\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css'\nimport markerIconPng from \"leaflet/dist/images/marker-icon.png\"\n\nimport 'leaflet.markercluster/dist/MarkerCluster.css'\nimport 'leaflet.markercluster/dist/leaflet.markercluster-src.js'\n//import 'leaflet/dist/leaflet.css';\nimport './../header.css'\n//import KBK from './../../asset/geoj\nimport outlet from './../../asset/outletsample.json'\ndelete L.Icon.Default.prototype._getIconUrl;\n\n\n\nclass Peta extends Component {\n    componentDidMount(){\n        this.map();\n    }\n    \n    peta;\n    markerClusterGroups;\n    datamarkers=[];\n    map(){\n        let self=this\n        let map = L.map('map').setView([-6.3867823,107.1149245], 11);\n        \n        L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\n            attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(map);\n        \n        this.markerClusterGroups = L.markerClusterGroup({animate: true,\n            animateAddingMarkers: true}).addTo(map);\n        for(let i=0;i<outlet.length;i++){\n            \n            let marker = L.marker([outlet[i].LATITUDE, outlet[i].LONGITUDE], JSON.parse(JSON.stringify(outlet[i])) );\n            marker.on('click', function(e) { \n                let html='<div style=\"display: flex;\"> <div style=\"flex: auto;\">'+\n                '</div>'\n                +'<div style=\"flex: auto; margin-left:5px;\"> <p> <b>' \n                + marker.options.NAME+ \n                '</b> <br />'+ marker.options.ADDRESS+' </p></div></div>' \n                marker.bindPopup(html).openPopup(); \n              });\n              this.markerClusterGroups.addLayer(marker)\n              \n            this.datamarkers.push(marker)\n        }\n        \n        self.peta=map\n    }\n    state = {  }\n    render() {\n        \n        return ( \n        <div>\n            \n                     \n                    <div style={{\"width\":\"100%\",\"height\":\"600px\",\"position\":\"absolute\"}}>\n                            \n                                <div className=\"Konten-muncul\" style={{\"z-index\":\"1\",\"width\":\"100%\",\"height\":\"100%\",\"margin\":\"0px\",\"position\": \"relative\"}} id=\"map\">\n                                    \n                                </div>\n                                <div className=\"Konten-munculkanan\" style={{\"z-index\":\"2\",\"float\":\"right\",\"position\": \"absolute\",\"margin\":\"10px\",\"right\":0,\"top\":0,\"bottom\":0}}>\n                                    <div className=\"card\" style={{\"width\":\"300px\",\"height\":\"100%\",\"background-color\":\"black\",\"opacity\":\"70%\",\"padding\":\"7px\"}}>\n                                        <div classNeme=\"card-body\">\n                                            <p style={{\"color\":\"white\",\"font-size\":\"30px\",\"text-align\":\"center\"}}> <b>Clustering</b> </p>\n                                        </div>    \n                                    </div>\n                                </div>\n                                \n                                \n                                \n                            \n                    </div>\n                    \n        </div>    \n        );\n        \n    }\n}\n \nexport default Peta;","import React, { Component } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Header from './header'\nimport Peta from './peta/peta'\n\n\n\nclass Home extends Component {\n    state = {  }\n    render() { \n        return ( \n            <div style={{\"background-color\":\"grey\",\"height\":\"100%\"}}>\n                <Header></Header>\n                <Peta />\n            </div>\n\n            );\n    }\n}\n \nexport default Home;","\nimport Home from './pages/home';\nimport './App.css';\nimport Button from 'react-bootstrap/Button'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nfunction App() {\n  return (\n    <div>\n      <Home />\n    </div>\n\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}